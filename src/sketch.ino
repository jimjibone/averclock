// TODO general scheduler addTask(pointer,interval,offset)
// and better with a queue and priorities?

// TODO feed-forward brightness adjusting based on LDR value. 2 values is fine.
// TODO debounced (async) button for setting time. Logarithmically repeating response, adjusting minutes and hours at the same time
// TODO alarm?
// TODO split into headers (and defines for SPI commands)
// TODO use registers instead of digitalwrite, etc
// TODO use registers instead of SPI library
// TODO support for bare multiplexed display without SPI

// this is automatically generated by deploy.sh
#include "current_time.h"
#include "../config.h"
#include "wallclock.h"
#include "display.h"
#include "remote.h"
#include "schavr.h"

//#include "main.h"


void setup () {
	SCH_init(50);
	// account for compile upload time

	init_display();
	remote_init();

	pinMode(LDR_PIN,INPUT);
	// 20K pullup
	digitalWrite(LDR_PIN,HIGH);

#ifndef DISPLAY_ADC
	SCH_add_task(wallclock_inc_sec, 1, 20);
	SCH_add_task(update_display,    1, 20);
	SCH_add_task(toggle_colon,      2, 20);
	SCH_add_task(remote_feedback,   2, 20*60);
#else
	SCH_add_task(display_adc,       2, 100);
#endif

#ifdef AUTO_BRIGHTNESS
	SCH_add_task(update_brightness, 2, 1);
#endif

	SCH_add_task(remote_command,    3, 1);

	SCH_start();
}

void loop () {
	SCH_dispatch_tasks();
//	SCH_sleep();
}

